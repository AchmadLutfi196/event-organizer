services:
  # Database Service
  mysql:
    image: mysql:8.0
    container_name: inventaris_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: inventaris_kantor
      MYSQL_USER: laravel
      MYSQL_PASSWORD: secret
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - inventaris_network

  # Redis Service
  redis:
    image: redis:7.0-alpine
    container_name: inventaris_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - inventaris_network

  # PHP-FPM Service
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: inventaris_app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - .:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - inventaris_network
    depends_on:
      - mysql
      - redis

  # Frontend User Domain (user.inventaris.local)
  nginx_user:
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile.user
    container_name: inventaris_nginx_user
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - .:/var/www
      - ./docker/nginx/user.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/ssl:/etc/nginx/ssl
    networks:
      - inventaris_network
    depends_on:
      - app

  # Admin Domain (admin.inventaris.local)
  nginx_admin:
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile.admin
    container_name: inventaris_nginx_admin
    restart: unless-stopped
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - .:/var/www
      - ./docker/nginx/admin.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/ssl:/etc/nginx/ssl
    networks:
      - inventaris_network
    depends_on:
      - app

  # Queue Worker
  queue:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: inventaris_queue
    restart: unless-stopped
    command: php artisan queue:work --sleep=3 --tries=3 --max-time=3600
    working_dir: /var/www
    volumes:
      - .:/var/www
    networks:
      - inventaris_network
    depends_on:
      - mysql
      - redis
  # Laravel Reverb (WebSockets)
  reverb:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: inventaris_reverb
    restart: unless-stopped
    command: php artisan reverb:start --host=0.0.0.0 --port=8080
    ports:
      - "9090:8080"
    working_dir: /var/www
    volumes:
      - .:/var/www
    networks:
      - inventaris_network
    depends_on:
      - mysql
      - redis

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  inventaris_network:
    driver: bridge
